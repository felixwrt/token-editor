on:
  push:
    branches:
    - main
  pull_request:

name: CI

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
        
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Install `trunk`
        uses: jetli/trunk-action@v0.4.0
        with:
          version: 'latest'

      - name: Build using `trunk`
        run: trunk build

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: token-editor-dist
          path: dist
          if-no-files-found: error

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  # deploy:
  #   name: Deploy to Cloudflare Pages
  #   needs: build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     deployments: write
  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: token-editor-dist
  #         path: dist-for-deploy
  #     - name: printenv
  #       run: printenv
  #     - name: Publish
  #       uses: cloudflare/pages-action@v1.5.0
  #       with:
  #         apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  #         projectName: token-editor
  #         directory: dist-for-deploy
  #         gitHubToken: ${{ secrets.GITHUB_TOKEN }}
  #         wranglerVersion: '3'
  #         branch: ${{ env.GITHUB_HEAD_REF }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: token-editor-dist
          path: dist-for-deploy
      - name: Publish
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist-for-deploy --project-name=token-editor

        